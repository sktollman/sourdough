#!/usr/bin/perl -w

use strict;
use LWP::UserAgent;
use HTTP::Request::Common;

for( my $window_size = 1; $window_size <= 1424; $window_size = $window_size + 50 ) {
    my $receiver_pid = fork;

    if ( $receiver_pid < 0 ) {
      die qq{$!};
    } elsif ( $receiver_pid == 0 ) {
      # child
      exec q{./receiver 9090} or die qq{$!};
    }

    chomp( my $prefix = qx{dirname `which mm-link`} );
    my $tracedir = $prefix . q{/../share/mahimahi/traces};

    # run the sender inside a linkshell and a delayshell
    my @command = qw{mm-delay 20 mm-link UPLINK DOWNLINK};

    # display livegraphs if we seem to be running under X
    if ( defined $ENV{ 'DISPLAY' } ) {
      push @command, qw{--meter-uplink --meter-uplink-delay};
    }

    push @command, qw{--once --uplink-log=/tmp/contest_uplink_log -- bash -c};

    push @command, qq{./sender \$MAHIMAHI_BASE 9090 $window_size};

    # for the contest, we will send data over Verizon's downlink
    # (datagrump sender's uplink)
    die unless $command[ 3 ] eq "UPLINK";
    $command[ 3 ] = qq{$tracedir/Verizon-LTE-short.down};

    die unless $command[ 4 ] eq "DOWNLINK";
    $command[ 4 ] = qq{$tracedir/Verizon-LTE-short.up};

    system @command;

    # kill the receiver
    kill 'INT', $receiver_pid;

    # analyze performance locally
    printf STDERR "$window_size, "; # will print window_size, stats
    system q{./exercise-A-throughput-graph 500 /tmp/contest_uplink_log > /dev/null}
      and die q{exercise-A-throughput-graph exited with error. NOT uploading};
}
